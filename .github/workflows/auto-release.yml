name: Auto Release on Version Change

on:
  push:
    branches: [ main ]
    paths:
      - 'webp-image-converter.php'
      - 'readme.txt'

jobs:
  auto-release:
    runs-on: ubuntu-latest
    
    permissions:
      contents: write
      pull-requests: read
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        token: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Extract version from plugin file
      id: extract_version
      run: |
        VERSION=$(awk '/\* Version:/ {print $3}' webp-image-converter.php)
        echo "current_version=$VERSION" >> $GITHUB_OUTPUT
        echo "Current version detected: $VERSION"
    
    - name: Check if version changed and tag exists
      id: check_version
      run: |
        VERSION=${{ steps.extract_version.outputs.current_version }}
        
        # Check if tag already exists
        if git rev-parse "v$VERSION" >/dev/null 2>&1; then
          echo "tag_exists=true" >> $GITHUB_OUTPUT
          echo "create_release=false" >> $GITHUB_OUTPUT
          echo "‚è≠Ô∏è  Tag v$VERSION already exists - skipping release"
          exit 0
        fi
        
        # Check if version actually changed from previous commit
        PREVIOUS_VERSION=$(git show HEAD~1:webp-image-converter.php | awk '/\* Version:/ {print $3}' || echo "0.0.0")
        
        if [ "$VERSION" = "$PREVIOUS_VERSION" ]; then
          echo "tag_exists=false" >> $GITHUB_OUTPUT
          echo "create_release=false" >> $GITHUB_OUTPUT
          echo "‚è≠Ô∏è  Version unchanged ($VERSION) - skipping release"
        else
          echo "tag_exists=false" >> $GITHUB_OUTPUT
          echo "create_release=true" >> $GITHUB_OUTPUT
          echo "üöÄ Version changed from $PREVIOUS_VERSION to $VERSION - creating release"
        fi
    
    - name: Extract changelog for current version
      id: changelog
      if: steps.check_version.outputs.create_release == 'true'
      run: |
        VERSION=${{ steps.extract_version.outputs.current_version }}
        # Extract changelog section for current version from readme.txt
        CHANGELOG=$(awk "/^= $VERSION =/{flag=1; next} /^= [0-9]+\.[0-9]+\.[0-9]+ =/{if(flag) exit} flag" readme.txt | sed '/^$/d')
        if [ -z "$CHANGELOG" ]; then
          CHANGELOG="Version $VERSION release - see commit history for details."
        fi
        # Save changelog to file to preserve formatting
        echo "$CHANGELOG" > changelog.txt
        echo "Extracted changelog for version $VERSION"
    
    - name: Create Git tag
      if: steps.check_version.outputs.create_release == 'true'
      run: |
        VERSION=${{ steps.extract_version.outputs.current_version }}
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git tag -a "v$VERSION" -m "Release version $VERSION"
        git push origin "v$VERSION"
        echo "Created and pushed tag v$VERSION"
    
    - name: Create plugin ZIP for distribution
      if: steps.check_version.outputs.create_release == 'true'
      run: |
        # Create a clean copy of the plugin for distribution
        mkdir -p dist
        rsync -av --exclude='.git*' --exclude='dist' --exclude='*.md' --exclude='.github' . dist/webp-image-converter/
        
        # Create ZIP file
        cd dist
        zip -r "../webp-image-converter-${{ steps.extract_version.outputs.current_version }}.zip" webp-image-converter/
        cd ..
        
        echo "Created distribution ZIP file"
        ls -la webp-image-converter-*.zip
    
    - name: Create GitHub Release
      if: steps.check_version.outputs.create_release == 'true'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.extract_version.outputs.current_version }}
        name: WebP Image Converter v${{ steps.extract_version.outputs.current_version }}
        body_path: changelog.txt
        files: |
          webp-image-converter-${{ steps.extract_version.outputs.current_version }}.zip
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Log release completion
      if: steps.check_version.outputs.create_release == 'true'
      run: |
        echo "‚úÖ Successfully created release v${{ steps.extract_version.outputs.current_version }}"
        echo "üì¶ Distribution ZIP: webp-image-converter-${{ steps.extract_version.outputs.current_version }}.zip"
        echo "üöÄ WordPress sites with auto-updater will detect this release within 1 minute"
    
    - name: Skip release creation
      if: steps.check_version.outputs.create_release == 'false'
      run: |
        VERSION=${{ steps.extract_version.outputs.current_version }}
        if [ "${{ steps.check_version.outputs.tag_exists }}" = "true" ]; then
          echo "‚è≠Ô∏è  Skipped release creation - tag v$VERSION already exists"
        else
          echo "‚è≠Ô∏è  Skipped release creation - version unchanged (v$VERSION)"
        fi